db.type = mysql

log.level = INFO

# jdbc info
#jdbc.url = jdbc:mysql://122.112.216.37:3306/open_api?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull
#jdbc.user = root
#jdbc.pass = Xjq/dj2019

jdbc.url = jdbc:mysql://rm-bp1r0g5b31e58z7909o.mysql.rds.aliyuncs.com:3306/open_api?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true
jdbc.user = wei_yuhang
jdbc.pass = vy^PZBG%kV%kKS8$

jfinal.devMode = true

# Redis
cache.redis.ip = 122.112.216.37
cache.redis.port = 6379
cache.redis.pass = Xjq/dj2019

# Redis Pool
#最大活动对象数
cache.redis.pool.maxTotal = 30
#最大能够保持idel状态的对象数
cache.redis.pool.maxIdle = 10
#当池内没有返回对象时，最大等待时间
cache.redis.pool.maxWaitMillis = 30000
#表示一个对象至少停留在idle状态的最短时间，然后才能被idle object evitor扫描并驱逐；这一项只有在timeBetweenEvictionRunsMillis大于0时才有意义；
cache.redis.pool.minEvictableIdleTimeMillis = 600000
#在minEvictableIdleTimeMillis基础上，加入了至少minIdle个对象已经在pool里面了。如果为-1，evicted不会根据idle time驱逐任何对象。
#如果minEvictableIdleTimeMillis>0，则此项设置无意义，且只有在timeBetweenEvictionRunsMillis大于0时才有意义；
cache.redis.pool.softMinEvictableIdleTimeMillis = 600000
#“空闲链接”检测线程，检测的周期，毫秒数。如果为负值，表示不运行“检测线程”。默认为-1
cache.redis.pool.timeBetweenEvictionRunsMillis = 300000

# rpc config
rpc.zbus.host = 172.16.73.2:15566
rpc.zbus.mq.device.sync.topic = ${rpc.zbus.mq.device.sync.topic}
rpc.zbus.mq.device.event.topic = ${rpc.zbus.mq.device.event.topic}
rpc.zbus.mq.device.operation.topic = ${rpc.zbus.mq.device.operation.topic}
rpc.zbus.mq.gateway.reset.topic = ${rpc.zbus.mq.gateway.reset.topic}



# db type
#db.type = ${db.type}

# jfinal mode
#jfinal.devMode = ${jfinal.devMode}

# jdbc info config
#jdbc.url = ${jdbc.url}
#jdbc.user = ${jdbc.user}
#jdbc.pass = ${jdbc.pass}

# redis pool config
#cache.redis.ip = ${cache.redis.ip}
#cache.redis.port = ${cache.redis.port}
#cache.redis.pass = ${cache.redis.pass}
#cache.redis.pool.maxTotal = ${cache.redis.pool.maxTotal}
#cache.redis.pool.maxIdle = ${cache.redis.pool.maxIdle}
#cache.redis.pool.maxWaitMillis = ${cache.redis.pool.maxWaitMillis}
#cache.redis.pool.minEvictableIdleTimeMillis = ${cache.redis.pool.minEvictableIdleTimeMillis}
#cache.redis.pool.softMinEvictableIdleTimeMillis = ${cache.redis.pool.softMinEvictableIdleTimeMillis}
#cache.redis.pool.timeBetweenEvictionRunsMillis = ${cache.redis.pool.timeBetweenEvictionRunsMillis}



